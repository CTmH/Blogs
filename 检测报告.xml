<?xml version="1.0" encoding="UTF-8"?>
<results version="2">
    <cppcheck version="1.90"/>
    <errors>
Checking /home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Findline.cpp ...
        <error id="variableScope" severity="style" msg="The scope of the variable &apos;line_id&apos; can be reduced." verbose="The scope of the variable &apos;line_id&apos; can be reduced. Warning: Be careful when fixing this message, especially when there are inner loops. Here is an example where cppcheck will write that the scope for &apos;i&apos; can be reduced:\012void f(int x)\012{\012    int i = 0;\012    if (x) {\012        // it&apos;s safe to move &apos;int i = 0;&apos; here\012        for (int n = 0; n &lt; 10; ++n) {\012            // it is possible but not safe to move &apos;int i = 0;&apos; here\012            do_something(&amp;i);\012        }\012    }\012}\012When you see this message it is always safe to reduce the variable scope 1 level." cwe="398">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Findline.cpp" line="20" column="15"/>
            <symbol>line_id</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;line_id&apos; is assigned a value that is never used." verbose="Variable &apos;line_id&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Findline.cpp" line="20" column="23"/>
            <symbol>line_id</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Findline.cpp" line="30" column="60"/>
        </error>
1/6 files checked 6% done
Checking /home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Findpath.cpp ...
        <error id="noExplicitConstructor" severity="style" msg="Class &apos;record_predecessors&apos; has a constructor with 1 argument that is not explicit." verbose="Class &apos;record_predecessors&apos; has a constructor with 1 argument that is not explicit. Such constructors should in general be explicit for type safety reasons. Using the explicit keyword in the constructor means some mistakes when using the class can be avoided." cwe="398">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Findpath.cpp" line="9" column="3"/>
            <symbol>record_predecessors</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;index&apos; is assigned a value that is never used." verbose="Variable &apos;index&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Findpath.cpp" line="51" column="18"/>
            <symbol>index</symbol>
        </error>
        <error id="unreadVariable" severity="style" msg="Variable &apos;rlen&apos; is assigned a value that is never used." verbose="Variable &apos;rlen&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Findpath.cpp" line="68" column="12"/>
            <symbol>rlen</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Findpath.cpp" line="73" column="81"/>
        </error>
2/6 files checked 24% done
Checking /home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Line_io.cpp ...
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Line_io.cpp" line="11" column="73"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Line_io.cpp" line="27" column="83"/>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Line_io.cpp" line="37" column="31"/>
        </error>
3/6 files checked 31% done
Checking /home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Metro-planning.cpp ...
4/6 files checked 41% done
Checking /home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Metro.cpp ...
        <error id="shadowVariable" severity="style" msg="Local variable &apos;i&apos; shadows outer variable" verbose="Local variable &apos;i&apos; shadows outer variable" cwe="398">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Metro.cpp" line="110" column="28" info="Shadow variable"/>
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Metro.cpp" line="81" column="20" info="Shadowed declaration"/>
            <symbol>i</symbol>
        </error>
        <error id="shadowVariable" severity="style" msg="Local variable &apos;line_name&apos; shadows outer variable" verbose="Local variable &apos;line_name&apos; shadows outer variable" cwe="398">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Metro.cpp" line="121" column="18" info="Shadow variable"/>
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Metro.cpp" line="52" column="20" info="Shadowed declaration"/>
            <symbol>line_name</symbol>
        </error>
        <error id="uninitStructMember" severity="error" msg="Uninitialized struct member: temp.id" verbose="Uninitialized struct member: temp.id" cwe="908">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Metro.cpp" line="63" column="34"/>
            <symbol>temp.id</symbol>
        </error>
        <error id="uninitStructMember" severity="error" msg="Uninitialized struct member: temp.istransfer" verbose="Uninitialized struct member: temp.istransfer" cwe="908">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Metro.cpp" line="63" column="34"/>
            <symbol>temp.istransfer</symbol>
        </error>
        <error id="uninitStructMember" severity="error" msg="Uninitialized struct member: temp.position_x" verbose="Uninitialized struct member: temp.position_x" cwe="908">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Metro.cpp" line="63" column="34"/>
            <symbol>temp.position_x</symbol>
        </error>
        <error id="uninitStructMember" severity="error" msg="Uninitialized struct member: temp.position_y" verbose="Uninitialized struct member: temp.position_y" cwe="908">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Metro.cpp" line="63" column="34"/>
            <symbol>temp.position_y</symbol>
        </error>
        <error id="uninitStructMember" severity="error" msg="Uninitialized struct member: temps.sysid" verbose="Uninitialized struct member: temps.sysid" cwe="908">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Metro.cpp" line="70" column="40"/>
            <symbol>temps.sysid</symbol>
        </error>
        <error id="uninitStructMember" severity="error" msg="Uninitialized struct member: temps.line" verbose="Uninitialized struct member: temps.line" cwe="908">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Metro.cpp" line="70" column="40"/>
            <symbol>temps.line</symbol>
        </error>
        <error id="uninitStructMember" severity="error" msg="Uninitialized struct member: temps.id" verbose="Uninitialized struct member: temps.id" cwe="908">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Metro.cpp" line="70" column="40"/>
            <symbol>temps.id</symbol>
        </error>
5/6 files checked 79% done
Checking /home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Trave_metro.cpp ...
        <error id="unreadVariable" severity="style" msg="Variable &apos;w&apos; is assigned a value that is never used." verbose="Variable &apos;w&apos; is assigned a value that is never used." cwe="563">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Trave_metro.cpp" line="10" column="54"/>
            <symbol>w</symbol>
        </error>
        <error id="postfixOperator" severity="performance" msg="Prefer prefix ++/-- operators for non-primitive types." verbose="Prefix ++/-- operators should be preferred for non-primitive types. Pre-increment/decrement can be more efficient than post-increment/decrement. Post-increment/decrement usually involves keeping a copy of the previous value around and adds a little extra code." cwe="398">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Trave_metro.cpp" line="66" column="47"/>
        </error>
6/6 files checked 100% done
        <error id="unusedFunction" severity="style" msg="The function &apos;print_path&apos; is never used." verbose="The function &apos;print_path&apos; is never used." cwe="561">
            <location file="/home/chez/文档/大学资料/大三上/软件工程/课程设计/metro-planning/Line_io.cpp" line="34" column="0"/>
            <symbol>print_path</symbol>
        </error>
        <error id="missingIncludeSystem" severity="information" msg="Cppcheck cannot find all the include files (use --check-config for details)" verbose="Cppcheck cannot find all the include files. Cppcheck can check the code without the include files found. But the results will probably be more accurate if all the include files are found. Please check your project&apos;s include directories and add all of them as include directories for Cppcheck. To see what files Cppcheck cannot find use --check-config."/>
    </errors>
</results>
